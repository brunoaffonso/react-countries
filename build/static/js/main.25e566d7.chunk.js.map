{"version":3,"sources":["components/countries/Country.js","components/countries/Countries.js","components/charts/Charts.js","components/header/Header.js","components/charts/continents.js","App.js","helpers/Helper.js","index.js","components/countries/country.module.css","components/header/header.module.css"],"names":["Country","country","this","props","className","css","card","cardTittle","name","alpha3Code","cardContent","img","src","flag","alt","capital","language","callingCodes","currencies","Component","Countries","countries","flex","map","key","id","Charts","region","width","height","chartType","loader","data","options","title","rootProps","Header","handleInput","event","newFilter","target","value","onChangeFilter","filter","countCountries","population","header","flexColumn","style","type","onChange","charts","handleContinents","continents","africa","americas","asia","europe","oceania","polar","find","cont","checkRegion","App","countPopulation","reduce","acc","curr","handleChangeFilter","setState","filterLowerCase","toLowerCase","res","state","allCountries","nameLowerCase","includes","resContinents","filteredCountries","totalPopulation","fetch","json","mappedCountries","numericCode","translations","languages","br","numero","textAlign","length","Intl","NumberFormat","format","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.25e566d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport css from './country.module.css';\n\nexport default class Country extends Component {\n  render() {\n    const { country } = this.props;\n    return (\n      <div className={css.card}>\n        <div className={css.cardTittle}>\n          <div>\n            {country.name} - {country.alpha3Code}\n          </div>\n        </div>\n        <div className={css.cardContent}>\n          <img className={css.img} src={country.flag} alt=\"\" />\n          <ul>\n            <li>\n              Capital: <strong>{country.capital}</strong>\n            </li>\n            <li>\n              Idioma: <strong>{country.language}</strong>\n            </li>\n            <li>\n              Código DDI: <strong>{country.callingCodes}</strong>\n            </li>\n            <li>\n              Moeda: <strong>{country.currencies}</strong>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Country from './Country';\n\nimport css from './country.module.css';\n\nexport default class Countries extends Component {\n  render() {\n    const { countries } = this.props;\n    return (\n      <div className={css.flex}>\n        {countries.map((country) => {\n          return (\n            <div key={country.id}>\n              <Country country={country} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Chart from 'react-google-charts';\n\nexport default class Charts extends Component {\n  render() {\n    const { region } = this.props;\n    return (\n      <Chart\n        width={'600px'}\n        height={'400px'}\n        chartType=\"PieChart\"\n        loader={<div>Loading Chart</div>}\n        data={region}\n        // {[\n        //   ['Task', 'Hours per Day'],\n        //   ['Work', 11],\n        //   ['Eat', 2],\n        //   ['Commute', 2],\n        //   ['Watch TV', 2],\n        //   ['Sleep', 7],\n        // ]}\n        options={{\n          title: 'Continentes',\n        }}\n        rootProps={{ 'data-testid': '1' }}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport css from './header.module.css';\nimport Charts from '../charts/Charts';\n\nexport default class Header extends Component {\n  handleInput = (event) => {\n    const newFilter = event.target.value;\n    this.props.onChangeFilter(newFilter);\n  };\n\n  render() {\n    const { filter, countCountries, population, region } = this.props;\n    return (\n      <div className={css.header}>\n        <div className={css.flexColumn}>\n          <input\n            style={{ width: '400px' }}\n            type=\"text\"\n            value={filter}\n            onChange={this.handleInput}\n          />\n          <span className={css.country}>\n            | Países: <strong>{countCountries}</strong>\n          </span>\n          <span className={css.population}>\n            | População: <strong>{population}</strong>\n          </span>\n        </div>\n        <div>\n          <div className={css.charts}>\n            <Charts region={region} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","function handleContinents(continents) {\n  let africa = 0;\n  let americas = 0;\n  let asia = 0;\n  let europe = 0;\n  let oceania = 0;\n  let polar = 0;\n\n  const checkRegion = (region) => {\n    switch (region) {\n      case 'Africa':\n        africa++;\n        break;\n      case 'Americas':\n        americas++;\n        break;\n      case 'Asia':\n        asia++;\n        break;\n      case 'Europe':\n        europe++;\n        break;\n      case 'Oceania':\n        oceania++;\n        break;\n      default:\n        polar++;\n        break;\n    }\n  };\n  continents.find((cont) => {\n    return checkRegion(cont.region);\n  });\n\n  return [\n    ['COntinente', 'Quantidade'],\n    ['Africa', africa],\n    ['Americas', americas],\n    ['Asia', asia],\n    ['Europa', europe],\n    ['Oceania', oceania],\n    ['Polar', polar],\n  ];\n}\n\nexport { handleContinents };\n","import React, { Component } from 'react';\nimport Countries from './components/countries/Countries';\nimport Header from './components/header/Header';\n\n// import css from './styles.module.css';\n\nimport { numberFormatter } from './helpers/Helper';\nimport { handleContinents } from './components/charts/continents';\n// import Charts from './components/charts/Charts';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      allCountries: [],\n      filteredCountries: [],\n      filter: '',\n      totalPopulation: '',\n      region: [],\n    };\n  }\n\n  async componentDidMount() {\n    const countries = await fetch('https://restcountries.com/v3.1/all');\n    const json = await countries.json();\n\n    const mappedCountries = json.map(\n      ({\n        numericCode,\n        translations,\n        flag,\n        population,\n        capital,\n        region,\n        languages,\n        callingCodes,\n        alpha3Code,\n        currencies,\n      }) => {\n        return {\n          id: numericCode,\n          name: translations.br,\n          nameLowerCase: translations.br.toLowerCase(),\n          flag,\n          population,\n          capital,\n          region,\n          language: languages[0].name,\n          callingCodes: callingCodes[0],\n          alpha3Code,\n          currencies: currencies[0].name,\n        };\n      }\n    );\n\n    const totalPopulation = this.countPopulation(mappedCountries);\n    const resContinents = handleContinents(mappedCountries);\n\n    this.setState({\n      allCountries: mappedCountries,\n      filteredCountries: mappedCountries,\n      totalPopulation,\n      region: resContinents,\n    });\n  }\n\n  countPopulation = (countries) => {\n    const totalPopulation = countries.reduce((acc, curr) => {\n      return acc + curr.population;\n    }, 0);\n    return totalPopulation;\n  };\n\n  handleChangeFilter = (newFilter) => {\n    this.setState({\n      filter: newFilter,\n    });\n    const filterLowerCase = newFilter.toLowerCase();\n\n    const res = this.state.allCountries.filter((countries) => {\n      return countries.nameLowerCase.includes(filterLowerCase);\n    });\n\n    const population = this.countPopulation(res);\n    const resContinents = handleContinents(res);\n\n    this.setState({\n      filteredCountries: res,\n      totalPopulation: population,\n      region: resContinents,\n    });\n  };\n\n  render() {\n    const { filter, filteredCountries, totalPopulation, region } = this.state;\n    return (\n      <div className=\"container\">\n        <h2 style={{ textAlign: 'center' }}>React Countries</h2>\n        <Header\n          filter={filter}\n          onChangeFilter={this.handleChangeFilter}\n          countCountries={filteredCountries.length}\n          population={numberFormatter(totalPopulation)}\n          region={region}\n        />\n        <Countries countries={filteredCountries} />\n      </div>\n    );\n  }\n}\n","function numberFormatter(numero) {\n  const numFormated = new Intl.NumberFormat('pt-BR').format(numero);\n  return numFormated;\n}\n\nexport { numberFormatter };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"country_flex__P5fGJ\",\"card\":\"country_card__fpK9d\",\"cardChild\":\"country_cardChild__4bYl_\",\"cardTittle\":\"country_cardTittle__R1hCx\",\"cardContent\":\"country_cardContent__3LDkX\",\"img\":\"country_img__Ib8Fr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\",\"flexColumn\":\"header_flexColumn__3O2BI\",\"country\":\"header_country__2MhPY\",\"population\":\"header_population__1dNSj\"};"],"sourceRoot":""}