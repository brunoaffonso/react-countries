{"ast":null,"code":"var _jsxFileName = \"/home/bruno/dev/Bootcamp FullStack/Modulo 3 - Frontend com React/react-countries/src/App.js\";\nimport React, { Component } from 'react';\nimport Countries from './components/countries/Countries';\nimport Header from './components/header/Header';\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.countPopulation = countries => {\n      countries.reduce((acc, curr) => {\n        return acc + curr.population;\n      }, 0);\n      console.log(curr.population);\n    };\n\n    this.handleChangeFilter = newFilter => {\n      this.setState({\n        filter: newFilter\n      });\n      const filterLowerCase = newFilter.toLowerCase();\n      const res = this.state.allCountries.filter(countries => {\n        return countries.nameLowerCase.includes(filterLowerCase);\n      });\n      const population = this.countPopulation(res);\n      console.log(population);\n      this.setState({\n        filteredCountries: res\n      });\n    };\n\n    this.state = {\n      allCountries: [],\n      filteredCountries: [],\n      filter: '',\n      population: ''\n    };\n  }\n\n  async componentDidMount() {\n    const countries = await fetch('https://restcountries.eu/rest/v2/all');\n    const json = await countries.json();\n    const mappedCountries = json.map(({\n      numericCode,\n      translations,\n      flag,\n      population,\n      capital,\n      region,\n      languages,\n      callingCodes,\n      alpha3Code\n    }) => {\n      return {\n        id: numericCode,\n        name: translations.br,\n        nameLowerCase: translations.br.toLowerCase(),\n        flag,\n        population,\n        capital,\n        region,\n        language: languages[0].iso639_1,\n        callingCodes: callingCodes[0],\n        alpha3Code\n      };\n    });\n    this.setState({\n      allCountries: mappedCountries,\n      filteredCountries: mappedCountries\n    });\n  }\n\n  render() {\n    const {\n      filter,\n      filteredCountries\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"React Countries\"), /*#__PURE__*/React.createElement(Header, {\n      filter: filter,\n      onChangeFilter: this.handleChangeFilter,\n      countCountries: filteredCountries.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Countries, {\n      countries: filteredCountries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/bruno/dev/Bootcamp FullStack/Modulo 3 - Frontend com React/react-countries/src/App.js"],"names":["React","Component","Countries","Header","App","constructor","countPopulation","countries","reduce","acc","curr","population","console","log","handleChangeFilter","newFilter","setState","filter","filterLowerCase","toLowerCase","res","state","allCountries","nameLowerCase","includes","filteredCountries","componentDidMount","fetch","json","mappedCountries","map","numericCode","translations","flag","capital","region","languages","callingCodes","alpha3Code","id","name","br","language","iso639_1","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Countries from './components/countries/Countries';\nimport Header from './components/header/Header';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      allCountries: [],\n      filteredCountries: [],\n      filter: '',\n      population: '',\n    };\n  }\n\n  async componentDidMount() {\n    const countries = await fetch('https://restcountries.eu/rest/v2/all');\n    const json = await countries.json();\n\n    const mappedCountries = json.map(\n      ({\n        numericCode,\n        translations,\n        flag,\n        population,\n        capital,\n        region,\n        languages,\n        callingCodes,\n        alpha3Code,\n      }) => {\n        return {\n          id: numericCode,\n          name: translations.br,\n          nameLowerCase: translations.br.toLowerCase(),\n          flag,\n          population,\n          capital,\n          region,\n          language: languages[0].iso639_1,\n          callingCodes: callingCodes[0],\n          alpha3Code,\n        };\n      }\n    );\n\n    this.setState({\n      allCountries: mappedCountries,\n      filteredCountries: mappedCountries,\n    });\n  }\n\n  countPopulation = (countries) => {\n    countries.reduce((acc, curr) => {\n      return acc + curr.population;\n    }, 0);\n    console.log(curr.population);\n  };\n\n  handleChangeFilter = (newFilter) => {\n    this.setState({\n      filter: newFilter,\n    });\n    const filterLowerCase = newFilter.toLowerCase();\n\n    const res = this.state.allCountries.filter((countries) => {\n      return countries.nameLowerCase.includes(filterLowerCase);\n    });\n\n    const population = this.countPopulation(res);\n    console.log(population);\n\n    this.setState({\n      filteredCountries: res,\n    });\n  };\n\n  render() {\n    const { filter, filteredCountries } = this.state;\n    return (\n      <div>\n        <h3>React Countries</h3>\n        <Header\n          filter={filter}\n          onChangeFilter={this.handleChangeFilter}\n          countCountries={filteredCountries.length}\n        />\n        <Countries countries={filteredCountries} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}