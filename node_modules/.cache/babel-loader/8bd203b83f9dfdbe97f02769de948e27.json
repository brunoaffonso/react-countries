{"ast":null,"code":"function handleContinents(continents) {\n  let africa = 0;\n  let americas = 0;\n  let asia = 0;\n  let europe = 0;\n  let oceania = 0;\n  let polar = 0;\n\n  const checkRegion = region => {\n    switch (region) {\n      case 'Africa':\n        africa++;\n        console.log(africa);\n        break;\n\n      case 'Americas':\n        americas++;\n        console.log(americas);\n        break;\n\n      case 'Asia':\n        asia++;\n        console.log(asia);\n        break;\n\n      case 'Europe':\n        europe++;\n        console.log(europe);\n        break;\n\n      case 'Oceania':\n        oceania++;\n        console.log(oceania);\n        break;\n\n      default:\n        polar++;\n        console.log(polar);\n        break;\n    }\n  };\n\n  continents.find(cont => {\n    return checkRegion(cont.region);\n  });\n  return [{\n    Africa: africa\n  }, {\n    Americas: americas\n  }, {\n    Asia: asia\n  }, {\n    Europa: europe\n  }, {\n    Oceania: oceania\n  }, {\n    Polar: polar\n  }];\n}\n\nexport { handleContinents };","map":{"version":3,"sources":["/home/bruno/dev/Bootcamp FullStack/Modulo 3 - Frontend com React/react-countries/src/components/charts/continents.js"],"names":["handleContinents","continents","africa","americas","asia","europe","oceania","polar","checkRegion","region","console","log","find","cont","Africa","Americas","Asia","Europa","Oceania","Polar"],"mappings":"AAAA,SAASA,gBAAT,CAA0BC,UAA1B,EAAsC;AACpC,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,KAAK,GAAG,CAAZ;;AAEA,QAAMC,WAAW,GAAIC,MAAD,IAAY;AAC9B,YAAQA,MAAR;AACE,WAAK,QAAL;AACEP,QAAAA,MAAM;AACNQ,QAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACA;;AACF,WAAK,UAAL;AACEC,QAAAA,QAAQ;AACRO,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA;;AACF,WAAK,MAAL;AACEC,QAAAA,IAAI;AACJM,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA;;AACF,WAAK,QAAL;AACEC,QAAAA,MAAM;AACNK,QAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA;;AACF,WAAK,SAAL;AACEC,QAAAA,OAAO;AACPI,QAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA;;AACF;AACEC,QAAAA,KAAK;AACLG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA;AAxBJ;AA0BD,GA3BD;;AA4BAN,EAAAA,UAAU,CAACW,IAAX,CAAiBC,IAAD,IAAU;AACxB,WAAOL,WAAW,CAACK,IAAI,CAACJ,MAAN,CAAlB;AACD,GAFD;AAIA,SAAO,CACL;AACEK,IAAAA,MAAM,EAAEZ;AADV,GADK,EAIL;AAAEa,IAAAA,QAAQ,EAAEZ;AAAZ,GAJK,EAKL;AAAEa,IAAAA,IAAI,EAAEZ;AAAR,GALK,EAML;AAAEa,IAAAA,MAAM,EAAEZ;AAAV,GANK,EAOL;AAAEa,IAAAA,OAAO,EAAEZ;AAAX,GAPK,EAQL;AAAEa,IAAAA,KAAK,EAAEZ;AAAT,GARK,CAAP;AAUD;;AAED,SAASP,gBAAT","sourcesContent":["function handleContinents(continents) {\n  let africa = 0;\n  let americas = 0;\n  let asia = 0;\n  let europe = 0;\n  let oceania = 0;\n  let polar = 0;\n\n  const checkRegion = (region) => {\n    switch (region) {\n      case 'Africa':\n        africa++;\n        console.log(africa);\n        break;\n      case 'Americas':\n        americas++;\n        console.log(americas);\n        break;\n      case 'Asia':\n        asia++;\n        console.log(asia);\n        break;\n      case 'Europe':\n        europe++;\n        console.log(europe);\n        break;\n      case 'Oceania':\n        oceania++;\n        console.log(oceania);\n        break;\n      default:\n        polar++;\n        console.log(polar);\n        break;\n    }\n  };\n  continents.find((cont) => {\n    return checkRegion(cont.region);\n  });\n\n  return [\n    {\n      Africa: africa,\n    },\n    { Americas: americas },\n    { Asia: asia },\n    { Europa: europe },\n    { Oceania: oceania },\n    { Polar: polar },\n  ];\n}\n\nexport { handleContinents };\n"]},"metadata":{},"sourceType":"module"}