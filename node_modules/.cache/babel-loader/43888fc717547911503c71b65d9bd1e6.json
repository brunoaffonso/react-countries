{"ast":null,"code":"function handleContinents(continents){var africa=0;var americas=0;var asia=0;var europe=0;var oceania=0;var polar=0;var checkRegion=function checkRegion(region){switch(region){case'Africa':africa++;break;case'Americas':americas++;break;case'Asia':asia++;break;case'Europe':europe++;break;case'Oceania':oceania++;break;default:polar++;break;}};continents.find(function(cont){return checkRegion(cont.region);});return[['COntinente','Quantidade'],['Africa',africa],['Americas',americas],['Asia',asia],['Europa',europe],['Oceania',oceania],['Polar',polar]];}export{handleContinents};","map":{"version":3,"sources":["/home/bruno/dev/react-countries/src/components/charts/continents.js"],"names":["handleContinents","continents","africa","americas","asia","europe","oceania","polar","checkRegion","region","find","cont"],"mappings":"AAAA,QAASA,CAAAA,gBAAT,CAA0BC,UAA1B,CAAsC,CACpC,GAAIC,CAAAA,MAAM,CAAG,CAAb,CACA,GAAIC,CAAAA,QAAQ,CAAG,CAAf,CACA,GAAIC,CAAAA,IAAI,CAAG,CAAX,CACA,GAAIC,CAAAA,MAAM,CAAG,CAAb,CACA,GAAIC,CAAAA,OAAO,CAAG,CAAd,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,CAAY,CAC9B,OAAQA,MAAR,EACE,IAAK,QAAL,CACEP,MAAM,GACN,MACF,IAAK,UAAL,CACEC,QAAQ,GACR,MACF,IAAK,MAAL,CACEC,IAAI,GACJ,MACF,IAAK,QAAL,CACEC,MAAM,GACN,MACF,IAAK,SAAL,CACEC,OAAO,GACP,MACF,QACEC,KAAK,GACL,MAlBJ,CAoBD,CArBD,CAsBAN,UAAU,CAACS,IAAX,CAAgB,SAACC,IAAD,CAAU,CACxB,MAAOH,CAAAA,WAAW,CAACG,IAAI,CAACF,MAAN,CAAlB,CACD,CAFD,EAIA,MAAO,CACL,CAAC,YAAD,CAAe,YAAf,CADK,CAEL,CAAC,QAAD,CAAWP,MAAX,CAFK,CAGL,CAAC,UAAD,CAAaC,QAAb,CAHK,CAIL,CAAC,MAAD,CAASC,IAAT,CAJK,CAKL,CAAC,QAAD,CAAWC,MAAX,CALK,CAML,CAAC,SAAD,CAAYC,OAAZ,CANK,CAOL,CAAC,OAAD,CAAUC,KAAV,CAPK,CAAP,CASD,CAED,OAASP,gBAAT","sourcesContent":["function handleContinents(continents) {\n  let africa = 0;\n  let americas = 0;\n  let asia = 0;\n  let europe = 0;\n  let oceania = 0;\n  let polar = 0;\n\n  const checkRegion = (region) => {\n    switch (region) {\n      case 'Africa':\n        africa++;\n        break;\n      case 'Americas':\n        americas++;\n        break;\n      case 'Asia':\n        asia++;\n        break;\n      case 'Europe':\n        europe++;\n        break;\n      case 'Oceania':\n        oceania++;\n        break;\n      default:\n        polar++;\n        break;\n    }\n  };\n  continents.find((cont) => {\n    return checkRegion(cont.region);\n  });\n\n  return [\n    ['COntinente', 'Quantidade'],\n    ['Africa', africa],\n    ['Americas', americas],\n    ['Asia', asia],\n    ['Europa', europe],\n    ['Oceania', oceania],\n    ['Polar', polar],\n  ];\n}\n\nexport { handleContinents };\n"]},"metadata":{},"sourceType":"module"}