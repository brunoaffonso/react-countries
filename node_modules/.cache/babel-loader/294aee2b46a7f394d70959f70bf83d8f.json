{"ast":null,"code":"var _jsxFileName = \"/home/bruno/dev/Bootcamp FullStack/Modulo 3 - Frontend com React/react-countries/src/App.js\";\nimport React, { Component } from 'react';\nimport Countries from './components/countries/Countries';\nimport Header from './components/header/Header'; // import css from './styles.module.css';\n\nimport { numberFormatter } from './helpers/Helper';\nimport { handleContinents } from './components/charts/continents'; // import Charts from './components/charts/Charts';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.countPopulation = countries => {\n      const totalPopulation = countries.reduce((acc, curr) => {\n        return acc + curr.population;\n      }, 0);\n      return totalPopulation;\n    };\n\n    this.handleChangeFilter = newFilter => {\n      this.setState({\n        filter: newFilter\n      });\n      const filterLowerCase = newFilter.toLowerCase();\n      const res = this.state.allCountries.filter(countries => {\n        return countries.nameLowerCase.includes(filterLowerCase);\n      });\n      const population = this.countPopulation(res);\n      const resContinents = handleContinents(res);\n      this.setState({\n        filteredCountries: res,\n        totalPopulation: population,\n        region: resContinents\n      });\n    };\n\n    this.state = {\n      allCountries: [],\n      filteredCountries: [],\n      filter: '',\n      totalPopulation: '',\n      region: []\n    };\n  }\n\n  async componentDidMount() {\n    const countries = await fetch('https://restcountries.eu/rest/v2/all');\n    const json = await countries.json();\n    const mappedCountries = json.map(({\n      numericCode,\n      translations,\n      flag,\n      population,\n      capital,\n      region,\n      languages,\n      callingCodes,\n      alpha3Code,\n      currencies\n    }) => {\n      return {\n        id: numericCode,\n        name: translations.br,\n        nameLowerCase: translations.br.toLowerCase(),\n        flag,\n        population,\n        capital,\n        region,\n        language: languages[0].name,\n        callingCodes: callingCodes[0],\n        alpha3Code,\n        currencies: currencies[0].name\n      };\n    });\n    const totalPopulation = this.countPopulation(mappedCountries);\n    const resContinents = handleContinents(mappedCountries);\n    this.setState({\n      allCountries: mappedCountries,\n      filteredCountries: mappedCountries,\n      totalPopulation,\n      region: resContinents\n    });\n  }\n\n  render() {\n    const {\n      filter,\n      filteredCountries,\n      totalPopulation,\n      region\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"React Countries\"), /*#__PURE__*/React.createElement(Header, {\n      filter: filter,\n      onChangeFilter: this.handleChangeFilter,\n      countCountries: filteredCountries.length,\n      population: numberFormatter(totalPopulation),\n      region: region,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Countries, {\n      countries: filteredCountries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/bruno/dev/Bootcamp FullStack/Modulo 3 - Frontend com React/react-countries/src/App.js"],"names":["React","Component","Countries","Header","numberFormatter","handleContinents","App","constructor","countPopulation","countries","totalPopulation","reduce","acc","curr","population","handleChangeFilter","newFilter","setState","filter","filterLowerCase","toLowerCase","res","state","allCountries","nameLowerCase","includes","resContinents","filteredCountries","region","componentDidMount","fetch","json","mappedCountries","map","numericCode","translations","flag","capital","languages","callingCodes","alpha3Code","currencies","id","name","br","language","render","textAlign","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Countries from './components/countries/Countries';\nimport Header from './components/header/Header';\n\n// import css from './styles.module.css';\n\nimport { numberFormatter } from './helpers/Helper';\nimport { handleContinents } from './components/charts/continents';\n// import Charts from './components/charts/Charts';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      allCountries: [],\n      filteredCountries: [],\n      filter: '',\n      totalPopulation: '',\n      region: [],\n    };\n  }\n\n  async componentDidMount() {\n    const countries = await fetch('https://restcountries.eu/rest/v2/all');\n    const json = await countries.json();\n\n    const mappedCountries = json.map(\n      ({\n        numericCode,\n        translations,\n        flag,\n        population,\n        capital,\n        region,\n        languages,\n        callingCodes,\n        alpha3Code,\n        currencies,\n      }) => {\n        return {\n          id: numericCode,\n          name: translations.br,\n          nameLowerCase: translations.br.toLowerCase(),\n          flag,\n          population,\n          capital,\n          region,\n          language: languages[0].name,\n          callingCodes: callingCodes[0],\n          alpha3Code,\n          currencies: currencies[0].name,\n        };\n      }\n    );\n\n    const totalPopulation = this.countPopulation(mappedCountries);\n    const resContinents = handleContinents(mappedCountries);\n\n    this.setState({\n      allCountries: mappedCountries,\n      filteredCountries: mappedCountries,\n      totalPopulation,\n      region: resContinents,\n    });\n  }\n\n  countPopulation = (countries) => {\n    const totalPopulation = countries.reduce((acc, curr) => {\n      return acc + curr.population;\n    }, 0);\n    return totalPopulation;\n  };\n\n  handleChangeFilter = (newFilter) => {\n    this.setState({\n      filter: newFilter,\n    });\n    const filterLowerCase = newFilter.toLowerCase();\n\n    const res = this.state.allCountries.filter((countries) => {\n      return countries.nameLowerCase.includes(filterLowerCase);\n    });\n\n    const population = this.countPopulation(res);\n    const resContinents = handleContinents(res);\n\n    this.setState({\n      filteredCountries: res,\n      totalPopulation: population,\n      region: resContinents,\n    });\n  };\n\n  render() {\n    const { filter, filteredCountries, totalPopulation, region } = this.state;\n    return (\n      <div className=\"container\">\n        <h2 style={{ textAlign: 'center' }}>React Countries</h2>\n        <Header\n          filter={filter}\n          onChangeFilter={this.handleChangeFilter}\n          countCountries={filteredCountries.length}\n          population={numberFormatter(totalPopulation)}\n          region={region}\n        />\n        <Countries countries={filteredCountries} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}